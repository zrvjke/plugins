(function () {
  'use strict';

  // === –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –∫–ª—é—á–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ ===
  const COMP_ID   = 'rtdual';                          // id —Å–µ–∫—Ü–∏–∏ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
  const STORE_KEY = 'rtdual';                          // –ø—Ä–µ—Ñ–∏–∫—Å –∫–ª—é—á–µ–π Storage
  const OMDB_URL  = 'https://www.omdbapi.com/';

  const SKEY_OMDB     = STORE_KEY + '_omdb_key';
  const SKEY_HIDE_TMDB= STORE_KEY + '_hide_tmdb';

  // --- –ø—Ä–æ—Å—Ç–µ—Ü–∫–∏–π –∫—ç—à –Ω–∞ —Å–µ—Å—Å–∏—é ---
  const cache = Object.create(null);

  // === –†–∞–∑–¥–µ–ª –≤ –ù–ê–°–¢–†–û–ô–ö–ê–• ===
  try {
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∞–º –ø—É–Ω–∫—Ç ¬´Rotten Tomatoes (OMDb Dual)¬ª –≤ –∫–æ—Ä–Ω–µ–≤–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    Lampa.SettingsApi.addComponent({
      component: COMP_ID,
      name: 'Rotten Tomatoes (OMDb Dual)',
      icon: 'üçÖ'
    });

    // –ü–æ–ª–µ –≤–≤–æ–¥–∞ OMDb API key
    Lampa.SettingsApi.addParam({
      component: COMP_ID,
      param: 'omdb_key',
      type: 'input',
      name: 'OMDb API-–∫–ª—é—á',
      default: '',
      value: Lampa.Storage.get(SKEY_OMDB, '') || '',
      onChange(val){
        Lampa.Storage.set(SKEY_OMDB, (val||'').trim());
        Lampa.Noty.show('–ö–ª—é—á OMDb —Å–æ—Ö—Ä–∞–Ω—ë–Ω');
      }
    });

    // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å–∫—Ä—ã—Ç–∏—è TMDb
    Lampa.SettingsApi.addParam({
      component: COMP_ID,
      param: 'hide_tmdb',
      type: 'checkbox',
      name: '–°–∫—Ä—ã–≤–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ TMDb –≤ –∫–∞—Ä—Ç–æ—á–∫–µ',
      default: false,
      value: !!Lampa.Storage.get(SKEY_HIDE_TMDB, false),
      onChange(val){
        Lampa.Storage.set(SKEY_HIDE_TMDB, !!val);
        Lampa.Noty.show('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
      }
    });

    // –ù–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ—ã
    Lampa.SettingsApi.addParam({
      component: COMP_ID,
      param: 'about',
      type: 'text',
      name: '–ü–ª–∞–≥–∏–Ω –¥–æ–±–∞–≤–ª—è–µ—Ç Tomatometer (–∫—Ä–∏—Ç–∏–∫–∏) –∏ Audience (–∑—Ä–∏—Ç–µ–ª–∏) –≤ —Å—Ç—Ä–æ–∫—É —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –∫–∞—Ä—Ç–æ—á–∫–∏. –î–ª—è —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è OMDb API-–∫–ª—é—á.',
    });
  } catch (e) {
    // –í —Å—Ç–∞—Ä—ã—Ö —Å–±–æ—Ä–∫–∞—Ö API –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è ‚Äî –ø—Ä–æ—Å—Ç–æ –º–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–º
    console.warn('RTDual: settings inject failed', e);
  }

  // === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–û–ï ===
  function omdbKey(){
    return (Lampa.Storage.get(SKEY_OMDB, '') || '').trim();
  }

  async function fetchJSON(url){
    try{
      const r = await fetch(url);
      return await r.json();
    }catch(e){ return null; }
  }

  async function fetchText(url){
    try{
      const r = await fetch(url);
      return await r.text();
    }catch(e){ return ''; }
  }

  function hideTMDbIfEnabled(root){
    if(!Lampa.Storage.get(SKEY_HIDE_TMDB, false)) return;

    try{
      // –£–¥–∞–ª—è–µ–º ¬´–ø–ª–∞—à–∫—É¬ª TMDb –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –∫–∞—Ä—Ç–æ—á–∫–∏
      // –°—Ç—Ä–æ–∫–∞: .info__rate .rate ‚Ä¶ –∏—â–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ç–µ–∫—Å—Ç TMDB
      root.find('.info__rate .rate').each(function(){
        const $r = $(this);
        const t  = ($r.text()||'').toLowerCase();
        if (t.includes('tmdb')) $r.remove();
      });
    }catch(e){}
  }

  function ensureRtBadgesContainer(root){
    // –°—Ç—Ä–æ–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ
    const row = root.find('.info__rate');
    return row.length ? row : null;
  }

  function addRtBadges(row, critics, audience){
    // –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å
    if (row.find('.rate--rt-critics').length || row.find('.rate--rt-aud').length) return;

    const tomatoIcon   = 'https://www.rottentomatoes.com/assets/pizza-pie/images/icons/tomatometer/tomatometer.svg';
    const popcornIcon  = 'https://www.rottentomatoes.com/assets/pizza-pie/images/icons/audience/audience.svg';

    const makeBadge = (cls, icon, value, label) => {
      const val = value ? value : '‚Äî';
      const tip = label + (value ? (': ' + value) : ': –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
      return $(
        `<div class="rate ${cls}" title="${tip}" style="display:flex;align-items:center;gap:.35em">
            <img src="${icon}" alt="${label}" style="width:1.1em;height:1.1em;display:block">
            <div class="rate__icon"></div>
            <div class="rate__text" style="font-weight:700">${val}</div>
            <div class="rate__name" style="opacity:.7">${label}</div>
         </div>`
      );
    };

    row.append( makeBadge('rate--rt-critics', tomatoIcon, critics,  'RT') );
    row.append( makeBadge('rate--rt-aud',     popcornIcon, audience,'AUD') );
  }

  async function getRtByOmdb({imdb, title, year}){
    const key = omdbKey();
    if(!key) return { error:'NO_KEY' };

    const ckey = imdb || (title + '|' + (year || ''));
    if (cache[ckey]) return cache[ckey];

    const qs = imdb
      ? `i=${encodeURIComponent(imdb)}`
      : `t=${encodeURIComponent(title)}${year?`&y=${encodeURIComponent(year)}`:''}`;

    const url = `${OMDB_URL}?apikey=${key}&${qs}&plot=short&r=json`;

    const data = await fetchJSON(url);
    if (!data || data.Error) return { error:'OMDB_ERROR' };

    // Tomatometer (–∫—Ä–∏—Ç–∏–∫–∏)
    let critics = null;
    if (Array.isArray(data.Ratings)){
      const rt = data.Ratings.find(r => r.Source === 'Rotten Tomatoes');
      if (rt && rt.Value) critics = rt.Value; // "92%"
    }

    // Audience Score ‚Äî –µ—Å–ª–∏ —É OMDb –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É RT, –≤—ã—Ç–∞—â–∏–º –ø—Ä–æ—Ü–µ–Ω—Ç —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    let audience = null;
    if (data.Website && /rottentomatoes\.com/.test(data.Website)){
      const html = await fetchText(data.Website);
      const m = html && html.match(/Audience Score[^0-9]*([0-9]{1,3})%/i);
      if (m) audience = m[1] + '%';
    }

    const res = { critics, audience };
    cache[ckey] = res;
    return res;
  }

  function warnNoKeyOnce(){
    if (window.__rtdual_key_warned) return;
    window.__rtdual_key_warned = true;
    Lampa.Noty.show('Rotten Tomatoes: –≤–≤–µ–¥–∏—Ç–µ OMDb API-–∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–ª–∞–≥–∏–Ω–∞.');
  }

  // === –û–°–ù–û–í–ù–û–ô –•–£–ö –í –ö–ê–†–¢–û–ß–ö–£ ===
  Lampa.Listener.follow('full', function (e) {
    if (e.type !== 'complite') return;

    // –ö–æ—Ä–Ω–µ–≤–∞—è –Ω–æ–¥–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
    const $root = e.body ? $(e.body) : $('.full'); // –ø–æ–¥—Å—Ç—Ä–∞—Ö—É–µ–º—Å—è
    if (!$root.length) return;

    hideTMDbIfEnabled($root);

    const row = ensureRtBadgesContainer($root);
    if (!row) return;

    // –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    const card = e.data && (e.data.movie || e.data.tv || e.data) || {};
    const imdb = card.imdb_id || card.imdb || '';
    const title= card.title   || card.name  || '';
    const year = card.release_year || card.year || '';

    if (!imdb && !title){
      // –Ω–µ—á–µ–≥–æ –∏—Å–∫–∞—Ç—å ‚Äî —Å–ø–æ–∫–æ–π–Ω–æ –≤—ã—Ö–æ–¥–∏–º
      return;
    }

    // –ø–æ–∫–∞ –≥—Ä—É–∑–∏–º ‚Äî –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å ¬´–ø—É—Å—Ç—ã—à–∫–∏¬ª, –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
    // –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä ‚Äî —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —Å—Ç—Ä–æ–∫—É –Ω–∏–∂–µ
    // row.append('<div class="wait_rating" style="width:2em;margin-left:.5em"></div>');

    getRtByOmdb({ imdb, title, year }).then(res=>{
      if (res && res.error === 'NO_KEY'){
        warnNoKeyOnce();
        return;
      }
      if (!res || res.error) return;

      addRtBadges(row, res.critics, res.audience);
    });
  });

})();

